plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'de.abramov'
version = '1.0'
sourceCompatibility = '17'


repositories {
    mavenCentral()
}

project.ext {
    openApiVersion = '1.6.7';
    junitJupterVersion = '5.8.2'
    mockitoVersion = '4.2.0'
}

configurations{
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-devtools'


    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation "io.micrometer:micrometer-core"

    implementation 'org.springdoc:springdoc-openapi-ui:' + project.ext.openApiVersion

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation "com.fasterxml.jackson.core:jackson-core"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'org.hsqldb:hsqldb'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'

    testImplementation 'org.junit.jupiter:junit-jupiter:' + project.ext.junitJupterVersion
    testImplementation 'org.junit.jupiter:junit-jupiter-api:' +  project.ext.junitJupterVersion
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:' +  project.ext.junitJupterVersion


    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testImplementation 'org.mockito:mockito-core:'+ project.ext.mockitoVersion
    testImplementation 'org.mockito:mockito-junit-jupiter:'+project.ext.mockitoVersion
}

springBoot {
    buildInfo()
}

tasks.named("bootRun") {
    mainClass = 'de.abramov.backend.BackendApplication'
}

tasks.named("bootBuildImage") {
    imageName = "${project.name}:${project.version}"
    publish = false // modify publishRegistry if set to TRUE
    verboseLogging = true
    docker {
        publishRegistry {
            username = "yourUsername" // provide it as environment variable for security reasons
            password = "yourPassword" // provide it as environment variable for security reasons
            url = "https://registry.yourDomain.com/v2" // provide it as environment variable for security reasons
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
